# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: ci-tests

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    env:
      # Configure a constant location for the uv cache
        UV_CACHE_DIR: /tmp/.uv-cache

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Load cached venv
      id: cached-uv-dependencies
      uses: actions/cache@v4
      with:
        path: /tmp/.uv-cache
        key: uv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/uv.lock') }}
    - name: Install dependencies
      run: |
        pip install uv==0.3.2
        uv venv
        source .venv/bin/activate
        uv sync
    - name: Code linting
      run: |
        source .venv/bin/activate
        ruff check src/smolvault tests
        ruff format --check src/smolvault tests
        mypy src/smolvault
    - name: Test with pytest
      run: |
        mkdir ~/.aws && touch ~/.aws/credentials && echo -e "[default]\naws_access_key_id = test\naws_secret_access_key = test" > ~/.aws/credentials
        mv tests/testing.env .env
        source .venv/bin/activate
        bash -c scripts/test.sh
    - name: Minimize uv cache
      run: uv cache prune --ci
